#pragma  ones;
#define MESSAGE_BUFFER 4096 // Максимальный размер буфера для приема и передачи
#define PORT 7777 // Номер порта, который будем использовать для приема и передачи 

void processRequest();
std::string  recivMess(char arryChar[]);


 /* У клиента с сервером есть поля сообения и они будут кодироваться так:
  -- программа имеет немколько состояний:
     1. состояние: программа не активна т.е нет подключения нет сообщений 
     2. Создание лога и пароля 
     3. Авторизация  на лог и пароль 
     4. Успешная авторизация  лог и пароль  
     5. Не успешный лог или пароль
     6. Передача сообщения от сервера
     7. Передача сообщения от клиента
  ---Структура сообщения
     -- Пароль пользователя  отправителя сообщения >> PasswordUser:value
     -- Имя пользователя  отправителя сообщения   >> NameUserSend:value
     -- Имя пользователя принимающего сообщения   >> NameUserRecive:value 
     -- Запрос на измененимя состояния (команда) >>  Request:value; 
     -- Текущее состояние программы  >> CarrentState:value;
     -- Сообщение пользователей >> Messaqge:value;
     -- Начало сообщение маркируется знаком *
     -- Конец сообщения маркируется  знаком &
     -- Поле сообщения отделяется друг от друга :
     -- Пробелы не допускаются    
     Нгапример:
     ---Запрос на создания лога и пароля выглядеть будет так:
         -- PasswordUser:123123
         -- NameUserSend:Misha
         --  NameUserRecive:-- (нет получателя ) 
         --  Request:2; 
         --  CarrentState:1
         --  Messaqge:--(нет сообщения)
    
            *123123:Misha:--:2:1:--&
*/